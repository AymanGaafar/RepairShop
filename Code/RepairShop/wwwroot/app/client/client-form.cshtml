@model RepairShop.Models.Client

<div class="form-horizontal">
    <h3>Personal Details</h3>
    <div class="form-group">
        <div class="layout horizontal">
            <label for="ClientForm_Code" class="control-label">@Html.DisplayNameFor(model => model.Code): </label>
            <span class="form-control read-only flex">{{vm.isNew ? "New" : vm.m.Code}}</span>
        </div>
        <div ng-if="vm.isDirty('Code')" class="validation-cont">
            <span class="validation-entry" ng-repeat="error in vm.getErrors('Code')">{{error.errorMessage}}</span>
        </div>
    </div>

    <div class="form-group">
        <div class="layout horizontal">
            <label for="ClientForm_FirstName" class="control-label">@Html.DisplayNameFor(model => model.FirstName): </label>
            <input id="ClientForm_FirstName" name="FirstName" type="text" class="form-control flex"
                   placeholder="@Html.DisplayNameFor(model => model.FirstName)"
                   ng-class="{invalid: vm.isDirty('FirstName') && vm.hasErrors('FirstName')}" ng-model="vm.m.FirstName" />
        </div>
        <div ng-if="vm.isDirty('FirstName')" class="validation-cont">
            <span class="validation-entry" ng-repeat="error in vm.getErrors('FirstName')">{{error.errorMessage}}</span>
        </div>
    </div>

    <div class="form-group">
        <div class="layout horizontal">
            <label for="ClientForm_LastName" class="control-label">@Html.DisplayNameFor(model => model.LastName): </label>
            <input id="ClientForm_LastName" name="LastName" type="text" class="form-control flex"
                   placeholder="@Html.DisplayNameFor(model => model.LastName)"
                   ng-class="{invalid: vm.isDirty('LastName') && vm.hasErrors('LastName')}" ng-model="vm.m.LastName" />
        </div>
        <div ng-if="vm.isDirty('LastName')" class="validation-cont">
            <span class="validation-entry" ng-repeat="error in vm.getErrors('LastName')">{{error.errorMessage}}</span>
        </div>
    </div>

    <h3>Contact Information</h3>
    <div class="form-group">
        <div class="layout horizontal">
            <label for="ClientForm_ContactInfo.EmailAddress" class="control-label">@Html.DisplayNameFor(model => model.ContactInfo.EmailAddress): </label>
            <input id="ClientForm_ContactInfo.EmailAddress" name="ContactInfo.EmailAddress" type="text" class="form-control flex"
                   placeholder="@Html.DisplayNameFor(model => model.ContactInfo.EmailAddress)"
                   ng-class="{invalid: vm.isDirty('ContactInfo.EmailAddress') && vm.hasErrors('ContactInfo.EmailAddress')}" ng-model="vm.m.ContactInfo.EmailAddress" />
        </div>
        <div ng-if="vm.isDirty('ContactInfo.EmailAddress')" class="validation-cont">
            <span class="validation-entry" ng-repeat="error in vm.getErrors('ContactInfo.EmailAddress')">{{error.errorMessage}}</span>
        </div>
    </div>

    <div class="form-group">
        <div class="layout horizontal">
            <label for="ClientForm_ContactInfo.FaxNumber" class="control-label">@Html.DisplayNameFor(model => model.ContactInfo.FaxNumber): </label>
            <input id="ClientForm_ContactInfo.FaxNumber" name="ContactInfo.FaxNumber" type="text" class="form-control flex"
                   placeholder="@Html.DisplayNameFor(model => model.ContactInfo.FaxNumber)"
                   ng-class="{invalid: vm.isDirty('ContactInfo.FaxNumber') && vm.hasErrors('ContactInfo.FaxNumber')}" ng-model="vm.m.ContactInfo.FaxNumber" />
        </div>
        <div ng-if="vm.isDirty('ContactInfo.FaxNumber')" class="validation-cont">
            <span class="validation-entry" ng-repeat="error in vm.getErrors('ContactInfo.FaxNumber')">{{error.errorMessage}}</span>
        </div>
    </div>

    <div class="form-group">
        <div class="layout horizontal">
            <label for="ClientForm_ContactInfo.MobileNumber" class="control-label">@Html.DisplayNameFor(model => model.ContactInfo.MobileNumber): </label>
            <input id="ClientForm_ContactInfo.MobileNumber" name="ContactInfo.MobileNumber" type="text" class="form-control flex"
                   placeholder="@Html.DisplayNameFor(model => model.ContactInfo.MobileNumber)"
                   ng-class="{invalid: vm.isDirty('ContactInfo.MobileNumber') && vm.hasErrors('ContactInfo.MobileNumber')}" ng-model="vm.m.ContactInfo.MobileNumber" />
        </div>
        <div ng-if="vm.isDirty('ContactInfo.MobileNumber')" class="validation-cont">
            <span class="validation-entry" ng-repeat="error in vm.getErrors('ContactInfo.MobileNumber')">{{error.errorMessage}}</span>
        </div>
    </div>

    <div class="form-group">
        <div class="layout horizontal">
            <label for="ClientForm_ContactInfo.PhoneNumber" class="control-label">@Html.DisplayNameFor(model => model.ContactInfo.PhoneNumber): </label>
            <input id="ClientForm_ContactInfo.PhoneNumber" name="ContactInfo.PhoneNumber" type="text" class="form-control flex"
                   placeholder="@Html.DisplayNameFor(model => model.ContactInfo.PhoneNumber)"
                   ng-class="{invalid: vm.isDirty('ContactInfo.PhoneNumber') && vm.hasErrors('ContactInfo.PhoneNumber')}" ng-model="vm.m.ContactInfo.PhoneNumber" />
        </div>
        <div ng-if="vm.isDirty('ContactInfo.PhoneNumber')" class="validation-cont">
            <span class="validation-entry" ng-repeat="error in vm.getErrors('ContactInfo.PhoneNumber')">{{error.errorMessage}}</span>
        </div>
    </div>
    
    <h3>Address</h3>
    <div class="form-group">
        <div class="layout horizontal">
            <label for="ClientForm_Address.Line1" class="control-label">@Html.DisplayNameFor(model => model.Address.Line1): </label>
            <input id="ClientForm_Address.Line1" name="Address.Line1" type="text" class="form-control flex"
                   placeholder="@Html.DisplayNameFor(model => model.Address.Line1)"
                   ng-class="{invalid: vm.isDirty('Address.Line1') && vm.hasErrors('Address.Line1')}" ng-model="vm.m.Address.Line1" />
        </div>
        <div ng-if="vm.isDirty('Address.Line1')" class="validation-cont">
            <span class="validation-entry" ng-repeat="error in vm.getErrors('Address.Line1')">{{error.errorMessage}}</span>
        </div>
    </div>
    
    <div class="form-group">
        <div class="layout horizontal">
            <label for="ClientForm_Address.Line2" class="control-label">@Html.DisplayNameFor(model => model.Address.Line2): </label>
            <input id="ClientForm_Address.Line2" name="Address.Line2" type="text" class="form-control flex"
                   placeholder="@Html.DisplayNameFor(model => model.Address.Line2)"
                   ng-class="{invalid: vm.isDirty('Address.Line2') && vm.hasErrors('Address.Line2')}" ng-model="vm.m.Address.Line2" />
        </div>
        <div ng-if="vm.isDirty('Address.Line2')" class="validation-cont">
            <span class="validation-entry" ng-repeat="error in vm.getErrors('Address.Line2')">{{error.errorMessage}}</span>
        </div>
    </div>
    
    <div class="form-group">
        <div class="layout horizontal">
            <label for="ClientForm_Address.Line3" class="control-label">@Html.DisplayNameFor(model => model.Address.Line3): </label>
            <input id="ClientForm_Address.Line3" name="Address.Line3" type="text" class="form-control flex"
                   placeholder="@Html.DisplayNameFor(model => model.Address.Line3)"
                   ng-class="{invalid: vm.isDirty('Address.Line3') && vm.hasErrors('Address.Line3')}" ng-model="vm.m.Address.Line3" />
        </div>
        <div ng-if="vm.isDirty('Address.Line3')" class="validation-cont">
            <span class="validation-entry" ng-repeat="error in vm.getErrors('Address.Line3')">{{error.errorMessage}}</span>
        </div>
    </div>
    
    <div class="form-group">
        <div class="layout horizontal">
            <label for="ClientForm_Address.PostalCode" class="control-label">@Html.DisplayNameFor(model => model.Address.PostalCode): </label>
            <input id="ClientForm_Address.PostalCode" name="Address.PostalCode" type="text" class="form-control flex"
                   placeholder="@Html.DisplayNameFor(model => model.Address.PostalCode)"
                   ng-class="{invalid: vm.isDirty('Address.PostalCode') && vm.hasErrors('Address.PostalCode')}" ng-model="vm.m.Address.PostalCode" />
        </div>
        <div ng-if="vm.isDirty('Address.PostalCode')" class="validation-cont">
            <span class="validation-entry" ng-repeat="error in vm.getErrors('Address.PostalCode')">{{error.errorMessage}}</span>
        </div>
    </div>

    <div class="form-group">
        <div class="layout horizontal">
            <label for="ClientForm_Address.City" class="control-label">@Html.DisplayNameFor(model => model.Address.City): </label>
            <input id="ClientForm_Address.City" name="Address.City" type="text" class="form-control flex"
                   placeholder="@Html.DisplayNameFor(model => model.Address.City)"
                   ng-class="{invalid: vm.isDirty('Address.City') && vm.hasErrors('Address.City')}" ng-model="vm.m.Address.City" />
        </div>
        <div ng-if="vm.isDirty('Address.City')" class="validation-cont">
            <span class="validation-entry" ng-repeat="error in vm.getErrors('Address.City')">{{error.errorMessage}}</span>
        </div>
    </div>

    <div class="form-group">
        <div class="layout horizontal">
            <label for="ClientForm_Address.Country" class="control-label">@Html.DisplayNameFor(model => model.Address.Country): </label>
            <input id="ClientForm_Address.Country" name="Address.Country" type="text" class="form-control flex"
                   placeholder="@Html.DisplayNameFor(model => model.Address.Country)"
                   ng-class="{invalid: vm.isDirty('Address.Country') && vm.hasErrors('Address.Country')}" ng-model="vm.m.Address.Country" />
        </div>
        <div ng-if="vm.isDirty('Address.Country')" class="validation-cont">
            <span class="validation-entry" ng-repeat="error in vm.getErrors('Address.Country')">{{error.errorMessage}}</span>
        </div>
    </div>
</div>

<status-reporter active="vm.status.isBusy" title="vm.status.title"
                 description="vm.status.description"></status-reporter>